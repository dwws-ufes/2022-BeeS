services:
  db:
    container_name: bees-database
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: unless-stopped

  pgweb:
    container_name: bees-database-manager
    image: sosedoff/pgweb
    ports:
      - "8081:8081"
    depends_on:
      - db

  d2rq:
    container_name: bees-rdfmapper
    build:
      context: .
      dockerfile: ./D2RQ-Dockerfile
    ports:
      - "${D2RQ_PORT}:2020"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_HOST: ${POSTGRES_HOST:-localhost}
      POSTGRES_CONNECTION: ${POSTGRES_CONNECTION}
    depends_on:
      - db

  app:
    container_name: bees-app
    build: .
    depends_on:
      - db
    environment:
      PORT: ${PORT}
      JWT_SECRET: ${JWT_SECRET}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_HOST: ${POSTGRES_HOST:-localhost}
      FRONTEND_CORS_URL: ${FRONTEND_CORS_URL}
      NODE_ENV: "prod"
    ports:
      - ${PORT}:${PORT}

volumes:
  postgres:

